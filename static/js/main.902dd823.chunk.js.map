{"version":3,"sources":["firebase.js","Instructions.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Instructions","className","Component","Form","action","onSubmit","this","props","handleFormSubmitFunc","onChange","handleRadioButtonSelectFunc","htmlFor","type","id","name","value","handleHabitDoneChangeFunc","handleHabitChangeFunc","HabitApp","handleHabitDoneChange","e","console","log","target","checked","setState","habitDone","handleHabitChange","event","userInput","state","handleFormSubmit","preventDefault","dbRef","database","ref","objectReadyForDatabase","day","radioButton","done","habit","push","handleRadioButtonSelect","removeLog","logKey","child","remove","habitHistory","on","response","notesFromDb","val","stateToBeSet","key","habitInfo","notes","map","index","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.902dd823.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCUPfcBc-1hRQqcq9i4uOxbtntMPVtZ3yY\",\n    authDomain: \"handy-habits.firebaseapp.com\",\n    databaseURL: \"https://handy-habits.firebaseio.com\",\n    projectId: \"handy-habits\",\n    storageBucket: \"handy-habits.appspot.com\",\n    messagingSenderId: \"98156576275\",\n    appId: \"1:98156576275:web:2e9efb5ea0fa8f8d1509e6\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { Component } from 'react';\n\n// This needs to appear/disappear\n\nclass Instructions extends Component {\n    render() {\n        return (\n            <ul className='instructions wrapper' >\n                <li>Select the day.</li>\n                <li>Check the box to mark the habit as done, and enter a note if you'd like.</li>\n                <li>Click submit to store it!</li>\n                <li>The days you have completed your habit will be blue, and days you have added a note have a dot. </li>\n                <li>Your habit logs will appear below the tracker.</li>\n            </ul>\n        );\n    }\n}\n\nexport default Instructions;","// Form Component\n\nimport React, { Component } from 'react';\n\nclass Form extends Component {\n\n    render() {\n        return (\n            <div className=' wrapper' >\n                <form \n                      action=\"submit\" \n                      onSubmit = {this.props.handleFormSubmitFunc} className='form' >\n\n                    <fieldset\n                      className = 'dayGrid' \n                      onChange = {this.props.handleRadioButtonSelectFunc}> \n                        <legend>Day</legend>\n\n                        <label htmlFor=\"1\">1</label>\n                        <input type=\"radio\" id=\"1\" name=\"day\" value=\"1\" />\n\n                        <label htmlFor=\"2\">2</label>\n                        <input type=\"radio\" id=\"2\" name=\"day\" value=\"2\" />\n\n                        <label htmlFor=\"3\">3</label>\n                        <input type=\"radio\" id=\"3\" name=\"day\" value=\"3\" />\n\n                        <label htmlFor=\"4\">4</label>\n                        <input type=\"radio\" id=\"4\" name=\"day\" value=\"4\" />\n\n                        <label htmlFor=\"5\">5</label>\n                        <input type=\"radio\" id=\"5\" name=\"day\" value=\"5\" />\n\n                        <label htmlFor=\"6\">6</label>\n                        <input type=\"radio\" id=\"6\" name=\"day\" value=\"6\" />\n\n                        <label htmlFor=\"7\">7</label>\n                        <input type=\"radio\" id=\"7\" name=\"day\" value=\"7\" />\n\n                        <label htmlFor=\"8\">8</label>\n                        <input type=\"radio\" id=\"8\" name=\"day\" value=\"8\" />\n\n                        <label htmlFor=\"9\">9</label>\n                        <input type=\"radio\" id=\"9\" name=\"day\" value=\"9\" />\n\n                        <label htmlFor=\"10\">10</label>\n                        <input type=\"radio\" id=\"10\" name=\"day\" value=\"10\" />\n\n                        <label htmlFor=\"11\">11</label>\n                        <input type=\"radio\" id=\"11\" name=\"day\" value=\"11\" />\n\n                        <label htmlFor=\"12\">12</label>\n                        <input type=\"radio\" id=\"12\" name=\"day\" value=\"12\" />\n\n                        <label htmlFor=\"13\">13</label>\n                        <input type=\"radio\" id=\"13\" name=\"day\" value=\"13\" />\n\n                        <label htmlFor=\"14\">14</label>\n                        <input type=\"radio\" id=\"14\" name=\"day\" value=\"14\" />\n\n                        <label htmlFor=\"15\">15</label>\n                        <input type=\"radio\" id=\"15\" name=\"day\" value=\"15\" />\n\n                        <label htmlFor=\"16\">16</label>\n                        <input type=\"radio\" id=\"16\" name=\"day\" value=\"16\" />\n\n                        <label htmlFor=\"17\">17</label>\n                        <input type=\"radio\" id=\"17\" name=\"day\" value=\"17\" />\n\n                        <label htmlFor=\"18\">18</label>\n                        <input type=\"radio\" id=\"18\" name=\"day\" value=\"18\" />\n\n                        <label htmlFor=\"19\">19</label>\n                        <input type=\"radio\" id=\"19\" name=\"day\" value=\"19\" />\n\n                        <label htmlFor=\"20\">20</label>\n                        <input type=\"radio\" id=\"20\" name=\"day\" value=\"20\" />\n\n                        <label htmlFor=\"21\">21</label>\n                        <input type=\"radio\" id=\"21\" name=\"day\" value=\"21\" />\n\n                        <label htmlFor=\"22\">22</label>\n                        <input type=\"radio\" id=\"22\" name=\"day\" value=\"22\" />\n\n                        <label htmlFor=\"23\">23</label>\n                        <input type=\"radio\" id=\"23\" name=\"day\" value=\"23\" />\n\n                        <label htmlFor=\"24\">24</label>\n                        <input type=\"radio\" id=\"24\" name=\"day\" value=\"24\" />\n\n                        <label htmlFor=\"25\">25</label>\n                        <input type=\"radio\" id=\"25\" name=\"day\" value=\"25\" />\n\n                        <label htmlFor=\"26\">26</label>\n                        <input type=\"radio\" id=\"26\" name=\"day\" value=\"26\" />\n\n                        <label htmlFor=\"27\">27</label>\n                        <input type=\"radio\" id=\"27\" name=\"day\" value=\"27\" />\n\n                        <label htmlFor=\"28\">28</label>\n                        <input type=\"radio\" id=\"28\" name=\"day\" value=\"28\" />\n\n                        <label htmlFor=\"29\">29</label>\n                        <input type=\"radio\" id=\"29\" name=\"day\" value=\"29\" />\n\n                        <label htmlFor=\"30\">30</label>\n                        <input type=\"radio\" id=\"30\" name=\"day\" value=\"30\" />\n\n\n                    </fieldset>\n\n                    <label htmlFor=\"habitDone\">Habit done?</label>\n                    <input \n                        type=\"checkbox\" \n                        id=\"habitDone\" \n                        name=\"done\"\n                        onChange={this.props.handleHabitDoneChangeFunc}/>\n\n                    <label htmlFor=\"notesFromUser\">Add a note:</label>\n                    <input \n                        type=\"text\" \n                        id = \"notesFromUser\"\n                        onChange = {this.props.handleHabitChangeFunc} \n                    />\n                    <button type = 'submit'>Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Form","import React, { Component } from 'react';\nimport firebase from './firebase.js';\nimport Instructions from './Instructions.js';\nimport Form from './Form.js';\nimport './App.css';\n\nclass HabitApp extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            radioButton: 0,\n            habitHistory: [],\n            habitDone: false,\n            userInput: ''\n        }\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n\n        dbRef.on('value', (response) => {\n            const notesFromDb = response.val();\n\n            const stateToBeSet = [];\n\n            for (let key in notesFromDb) {\n                console.log(notesFromDb[key]);\n                console.log(key);\n                const habitInfo = {\n                    key: key,\n                    day: notesFromDb[key].day,\n                    done: notesFromDb[key].done,\n                    notes: notesFromDb[key].habit,\n                }\n\n                stateToBeSet.push(habitInfo);\n            }\n\n            this.setState({\n                habitHistory: stateToBeSet,\n            })\n        })\n    }\n\n    handleHabitDoneChange = (e) => {\n        console.log(e.target.checked);\n        this.setState ({\n            habitDone: e.target.checked\n        })\n\n    }\n\n    handleHabitChange = (event) => {\n        this.setState ({\n            userInput: event.target.value\n        }, ()=>{\n            console.log(this.state.userInput)\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        const dbRef = firebase.database().ref();\n\n        const objectReadyForDatabase = {\n            day: this.state.radioButton,\n            done: this.state.habitDone,\n            habit: this.state.userInput,\n        }\n\n        console.log(event);\n        dbRef.push(objectReadyForDatabase);\n\n\n        this.setState ({\n            userInput: '',\n            radioButton: 0,\n            habitDone: false, \n        })\n    }\n\n    handleRadioButtonSelect = (event) => {\n        console.log(event.target.value)\n        this.setState ({\n            radioButton: event.target.value,\n        })\n    }\n\n    removeLog = (logKey) => {\n        console.log(logKey);\n        const dbRef = firebase.database().ref();\n        dbRef.child(logKey).remove();\n    }\n\n    render() {\n        console.log(this.state.habitHistory)\n        return (\n                <div className = 'wrapper'>\n                <header>\n                    <h1>Handy Habits</h1>\n                    <h4>Creating a habit takes time. Track your habit over 30 days!</h4>\n                </header>\n                <main>\n                    <Instructions /> \n                    <Form \n                    handleHabitDoneChangeFunc = {this.handleHabitDoneChange}\n                    handleFormSubmitFunc = {this.handleFormSubmit}\n                    handleHabitChangeFunc = {this.handleHabitChange}\n                    handleRadioButtonSelectFunc = {this.handleRadioButtonSelect}\n                    />\n                    <div className='habitLog'>\n                        <h2>Habit Log</h2>\n                        <ul>\n                            {this.state.habitHistory.map((log, index) => {\n                                return (\n                                    <li key={log.key}>\n                                        <p>Day:{log.day} Notes: {log.notes} </p>\n                                        <button onClick={() => {this.removeLog(log.key)}}>Remove Log</button>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n\n                </main>\n                </div>\n        );\n    }\n}\n\nexport default HabitApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}